/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    // chain-length = <6>;

    chain-length = <24>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
    };

    behaviors {
        rgb_ef: rgb_ef {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_EF";
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_br: rgb_br {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_BR";
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_sat: rgb_sat {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_SAT";
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_hue: rgb_hue {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_HUE";
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q     &kp W        &kp F  &kp P  &kp B    &kp J  &kp L  &kp U      &kp Y      &kp SEMI
&kp A     &kp R        &kp S  &kp T  &kp G    &kp M  &kp N  &kp E      &kp I      &kp O
&kp Z     &kp X        &kp C  &kp D  &kp V    &kp K  &kp H  &kp COMMA  &kp DOT    &kp FSLH
&kp LGUI  &lt 2 SPACE                                                  &kp SPACE  &lt 1 BACKSPACE
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &kp LS(PLUS)
&trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &kp EQUAL
&trans  &trans  &trans  &trans  &trans    &kp N0  &kp N1  &kp N2  &kp N3  &kp MINUS
&trans  &trans                                                    &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans    &trans         &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &kp RCTRL
&trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END    &trans
&trans  &trans                                                                &trans     &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &rgb_ef     &rgb_br            &rgb_hue      &rgb_sat    &rgb_ug RGB_TOG
&trans  &trans  &trans  &trans  &trans    &kp K_PREV  &kp K_VOLUME_DOWN  &kp K_VOL_UP  &kp K_NEXT  &trans
&trans  &trans  &trans  &trans  &trans    &trans      &kp K_PLAY_PAUSE   &trans        &trans      &trans
&trans  &trans                                                                         &trans      &trans
            >;
        };
    };
};
