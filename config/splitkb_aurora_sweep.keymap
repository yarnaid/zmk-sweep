/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    // chain-length = <6>;

    chain-length = <24>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        l-br {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        r-br {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <5 6>;
        };

        l-par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <13 14>;
        };

        r-par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <15 16>;
        };

        l-brc {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 24>;
        };

        r-brc {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <25 26>;
        };

        caps-word {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };

        del {
            bindings = <&lt 3 DEL>;
            key-positions = <32 33>;
        };

        studio {
            bindings = <&studio_unlock>;
            key-positions = <30 31 32 33>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <16 17>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <13 12>;
        };

        exlamation {
            bindings = <&kp EXCL>;
            key-positions = <0 10>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <1 11>;
        };

        sharp {
            bindings = <&kp HASH>;
            key-positions = <2 12>;
        };

        usd {
            bindings = <&kp DOLLAR>;
            key-positions = <3 13>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <4 14>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <5 15>;
        };

        amprs {
            bindings = <&kp AMPS>;
            key-positions = <6 16>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <7 17>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <8 18>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <9 19>;
        };

        semicol {
            bindings = <&kp SEMI>;
            key-positions = <19 29>;
        };

        tilda {
            bindings = <&kp TILDE>;
            key-positions = <20 21>;
        };

        couble-brackets {
            bindings = <&double_brackets>;
            key-positions = <1 3>;
        };

        double_par {
            bindings = <&double_par>;
            key-positions = <11 13>;
        };

        double_braces {
            bindings = <&double_braces>;
            key-positions = <21 23>;
        };
    };

    behaviors {
        rgb_ef: rgb_ef {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_EF";
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_br: rgb_br {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_BR";
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_sat: rgb_sat {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_SAT";
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_hue: rgb_hue {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_HUE";
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        quote_and_qwerty: quote_and_qwerty {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTE_AND_QWERTY";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&tog 5>;
        };
    };

    macros {
        double_brackets: closed_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET>;
            label = "CLOSED_BRACKETS";
        };

        double_par: double_par {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR>;
            label = "DOUBLE_PAR";
        };

        double_braces: double_braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC>;
            label = "DOUBLE_BRACES";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W        &kp F         &kp P         &kp B    &kp J  &kp L         &kp U         &kp Y        &kp SINGLE_QUOTE
&hrm LGUI A  &hrm LALT R  &hrm LCTRL S  &hrm LSHFT T  &kp G    &kp M  &hrm RSHFT N  &hrm RCTRL E  &hrm RALT I  &hrm RGUI O
&kp Z        &kp X        &kp C         &kp D         &kp V    &kp K  &kp H         &kp COMMA     &kp DOT      &kp FSLH
&lt 4 LGUI   &lt 3 SPACE                                                                          &lt 2 ENTER  &lt 1 BACKSPACE
            >;

            label = "base";
        };

        numbers {
            bindings = <
&trans    &trans    &trans     &trans     &trans    &trans  &kp N7  &kp N8  &kp N9  &kp LS(PLUS)
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &kp N4  &kp N5  &kp N6  &kp N0
&trans    &trans    &trans     &trans     &trans    &trans  &kp N1  &kp N2  &kp N3  &kp MINUS
&trans    &trans                                                            &trans  &trans
            >;

            label = "num";
        };

        nav {
            bindings = <
&trans    &trans    &trans     &trans     &trans    &trans    &trans         &trans     &trans     &trans
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &kp RCTRL
&trans    &trans    &trans     &trans     &trans    &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END    &trans
&trans    &trans                                                                        &trans     &trans
            >;

            label = "nav";
        };

        media {
            bindings = <
&bt BT_CLR    &trans        &trans        &out OUT_TOG  &sys_reset      &rgb_ef     &rgb_br            &rgb_hue         &rgb_sat    &rgb_ug RGB_TOG
&kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &trans          &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_MUTE  &kp C_PP           &none            &none       &sys_reset
&trans        &trans                                                                                                    &trans      &trans
            >;

            label = "media";
        };

        f-layer {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F12    &trans  &trans     &trans     &trans    &trans
&trans  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI
&trans  &kp F1  &kp F2  &kp F3  &kp F10    &trans  &trans     &trans     &trans    &trans
&trans  &trans                                                           &trans    &trans
            >;

            label = "fn";
        };

        qwerty {
            bindings = <
&kp Q        &kp W        &kp E         &kp R         &kp T    &kp Y  &kp U         &kp I         &kp O        &kp P
&hrm LGUI A  &hrm LALT S  &hrm LCTRL D  &hrm LSHFT F  &kp G    &kp H  &hrm RSHFT J  &hrm RCTRL K  &hrm RALT L  &hrm RGUI SQT
&kp Z        &kp X        &kp C         &kp V         &kp B    &kp N  &kp M         &kp COMMA     &kp DOT      &kp FSLH
&trans       &trans                                                                               &trans       &trans
            >;

            label = "qwerty";
        };
    };
};
